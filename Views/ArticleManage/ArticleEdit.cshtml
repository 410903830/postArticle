@model postArticle.viewmodel.ArticleManageViewModel

@{
    ViewBag.Title = "編輯文章";
}

<style>
    body {
        background-color: #A4DA8A;
        font-family: Arial, sans-serif;
    }
    .form-container {
        max-width: 400px;
        margin: 0 auto;
        background-color: #f5f5f5;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        font-weight: bold;
        margin-bottom: 10px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .btn-primary {
        display: inline-block;
        padding: 10px 20px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }
</style>


@using (Html.BeginForm("ArticleEdit", null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-container" }))
{
    @Html.AntiForgeryToken()

    <h4>編輯文章</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.article.ArticleID)
    @Html.HiddenFor(model => model.article.UserID)
    @Html.HiddenFor(model => model.article.ArticleType)
    @Html.HiddenFor(model => model.article.Time)
    @Html.HiddenFor(model => model.article.Likes)
    @Html.HiddenFor(model => model.article.ImageURL)

    <div class="form-group">
        <label class="form-label" for="Title">標題</label>
        @Html.EditorFor(model => model.article.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.article.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label class="form-label" for="Content">內容</label>
        @Html.EditorFor(model => model.article.Content, new { htmlAttributes = new { @class = "form-control", rows = 4 } })
        @Html.ValidationMessageFor(model => model.article.Content, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label class="form-label" for="file">圖片</label>
        <input type="file" name="file" id="file" accept="image/*" onchange="previewImage(event)" />
        <br>
        <img id="imagePreview" src="~/Uploads/@Model.article.ImageURL" alt="Image Preview" style="max-width: 100%; max-height: 200px;" />
    </div>

    <div class="form-group">
        <label class="form-label" for="Classification">分類</label>
        @Html.DropDownListFor(model => model.article.Classification, new SelectList(Model.Classification), null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.article.Classification, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn btn-secondary" onclick="ResetImg()" />
    </div>
}

<div>
    <button class="btn btn-warning" type="button" onclick="location.href='@Url.Action("ArticleIndex", "Home", new { id = Model.article.ArticleID }, null)'">返回首頁</button>
</div>

<script>
    function previewImage(event) {
        var fileInput = event.target;
        var file = fileInput.files[0];
        var reader = new FileReader();

        reader.onload = function (e) {
            var imagePreview = document.getElementById('imagePreview');
            if (imagePreview) {
                imagePreview.src = e.target.result;
            }
        };

        reader.readAsDataURL(file);
    }



   function ResetImg() {
       // 恢復圖片的原始 src
       document.getElementById('imagePreview').src = '@Url.Content("~/Uploads/" + Model.article.ImageURL)';
   }

</script>